ROSTemplateFormatVersion: '2015-09-01'
Conditions:
  DisablePublicNetworkCondition:
    Fn::Equals:
      - PrivateNet
      - Ref: NetworkOption

Parameters:
  HigressAI:
    Type: String
    Label:
      zh-cn: AI网关
      en: AI Gateway
  InternetMaxBandwidthOut:
    Type: Number
    Label:
      zh-cn: 公网带宽 (Mbps)
      en: Internet Max Bandwidth Out (Mbps)
    MinValue: 1
    MaxValue: 100
  InternetChargeType:
    Type: String
    Label:
      zh-cn: 带宽付费类型
      en: Internet Charge Type
    AssociationPropertyMetadata:
      ValueLabelMapping:
        PayByTraffic: 按流量计费
        PayByBandwidth: 按固定带宽计费
    AllowedValues:
      - PayByBandwidth
      - PayByTraffic
  McpConfigJson:
    Type: Json
    Label:
      zh-cn: MCP运行配置
      en: MCP Running Configuration
    AssociationProperty: 'ALIYUN::MCP::Server::Server'
    AssociationPropertyMetadata:
      ShowLabel: false
      ShowCount: 6

  MCP_KEY:
    Type: String
    Description:
      zh-cn: MCP工具key，用于保护您的工具不被公网滥用
      en: MCP tool key, used to protect your tool from being abused by the public network
    AssociationProperty: AutoCompleteInput
    AssociationPropertyMetadata:
      Length: 10
      CharacterClasses:
        - Class: "lowercase"
          min: 4
        - Class: "uppercase"
          min: 4
        - Class: "number"
          min: 2
  NetworkOption:
    Type: String
    AllowedValues:
      - PublicNet
      - PrivateNet
    AssociationPropertyMetadata:
      ValueLabelMapping:
        PublicNet:
          zh-cn: 公网访问SSE
          en: public network access
        PrivateNet:
          zh-cn: 私网访问SSE
          en: private network access
    Default: PublicNet
  PayType:
    Type: String
    Label:
      en: ECS Instance Charge Type
      zh-cn: 付费类型
    Default: PostPaid
    AllowedValues:
      - PostPaid
      - PrePaid
    AssociationProperty: ChargeType
    AssociationPropertyMetadata:
      LocaleKey: InstanceChargeType
  PayPeriodUnit:
    Type: String
    Label:
      en: Pay Period Unit
      zh-cn: 购买资源时长周期
    Default: Month
    AllowedValues:
      - Month
      - Year
    AssociationProperty: PayPeriodUnit
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  PayPeriod:
    Type: Number
    Label:
      en: Period
      zh-cn: 购买资源时长
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    AssociationProperty: PayPeriod
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  EcsInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: ${PayType}
      Constraints:
        InstanceTypeFamily:
          - ecs.u1
          - ecs.e
  InstancePassword:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AllowedPattern: '^[a-zA-Z0-9-\(\)\`\~\!\@\#\$\%\^\&\*\_\-\+\=\|\{\}\[\]\:\;\<\>\,\.\?\/]*$'
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    MinLength: 8
    MaxLength: 30
    AssociationProperty: ALIYUN::ECS::Instance::Password
    AssociationPropertyMetadata:
      Random: True
      InstanceType: ${EcsInstanceType}
Resources:
  DATASOURCE::APIG::Gateway:
    Type: DATASOURCE::APIG::Gateways
    Properties:
      GatewayId:
        Ref: HigressAI

  EcsRole:
    Type: ALIYUN::RAM::Role
    Properties:
      RoleName:
        Fn::Sub: 'HigressRole-${ALIYUN::StackId}'
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ecs.aliyuncs.com
        Version: '1'
      Policies:
        - PolicyName:
            'Fn::Sub': 'HigressEcsPolicy-${ALIYUN::StackId}'
          PolicyDocument:
            Statement:
              - Action:
                  - 'ram:CreateServiceLinkedRole'
                Resource:
                  - '*'
                Effect: Allow
                Condition:
                  StringEquals:
                    'ram:ServiceName':
                      - supplier.computenest.aliyuncs.com
              - Action:
                  - 'ram:CreateServiceLinkedRole'
                Resource:
                  - '*'
                Effect: Allow
                Condition:
                  StringEquals:
                    'ram:ServiceName': cloudmonitor.aliyuncs.com
              - Action:
                  - 'computenestsupplier:*'
                  - 'apig:*'
                  - 'cms:*'
                  - 'ecs:*'
                  - 'vpc:*'
                  - 'oss:*'
                  - 'ros:*'
                  - 'tag:*'
                  - 'ots:*'
                  - 'ram:GetRole'
                Resource:
                  - '*'
                Effect: Allow
            Version: '1'
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupName:
        Ref: ALIYUN::StackName
      VpcId:
        Fn::If:
          - CreateVpcConditions
          - Ref: EcsVpc
          - Ref: VpcId
      SecurityGroupIngress:
        - PortRange: 8000/8000
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 8080/8080
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 8001/8001
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 8443/8443
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
  InstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      # 付费类型
      InstanceChargeType:
        Ref: PayType
      PeriodUnit:
        Ref: PayPeriodUnit
      Period:
        Ref: PayPeriod
      VpcId:
        Fn::If:
          - CreateVpcConditions
          - Ref: EcsVpc
          - Ref: VpcId
      VSwitchId:
        'Fn::If':
          - CreateVpcConditions
          - Ref: EcsVSwitch
          - Ref: VSwitchId
      ZoneId:
        Ref: ZoneId
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId: ecs_image_quickstart-mcp
      Password:
        Ref: InstancePassword
      InstanceType:
        Ref: EcsInstanceType
      SystemDiskCategory: cloud_essd
      SystemDiskSize: 40
      InternetMaxBandwidthOut:
        Ref: InternetMaxBandwidthOut
      InternetChargeType:
        Ref: InternetChargeType
      IoOptimized: optimized
      MaxAmount: 1
  RunInstallCommand:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        Fn::GetAtt:
          - InstanceGroup
          - InstanceIds
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub:
          - |
            set -e
            cd /root
            cat > config.json << EOF
            ${MCP_RESULT}
            EOF
            sed -i "s|\${!MCP_KEY}|${mcp_KEY}|g" /root/application/mcp/docker-compose.yaml

            file_path="/etc/systemd/system/quickstart-mcp.service"
            if [ ! -f "$file_path" ]; then
            cat > $file_path <<EOF
            [Unit]
            Description=Docker Compose Application Service
            Requires=docker.service
            After=docker.service

            [Service]
            Type=oneshot
            RemainAfterExit=yes
            WorkingDirectory=/root/application/mcp
            ExecStart=/usr/bin/docker compose -f docker-compose.yaml up -d
            ExecStop=/usr/bin/docker compose down
            TimeoutStartSec=0

            [Install]
            WantedBy=multi-user.target
            EOF

            systemctl enable quickstart-mcp
            
            fi
            systemctl daemon-reload
            systemctl restart quickstart-mcp
            cd /root/application/mcp

            MAX_TIMEOUT=1800
            INTERVAL=10
            MAX_ATTEMPTS=$((MAX_TIMEOUT / INTERVAL))
            
            for ((i=1; i<=MAX_ATTEMPTS; i++))
              do
                LATEST_LOG=$(docker logs mcpo-service 2>&1 | tail -n 10)
                if echo "$LATEST_LOG" | grep -q "Uvicorn running on http://0.0.0.0:8000"
                  then
                    echo "success"
                    break
                  else
                    sleep $INTERVAL
              fi
            done
            for ((i=1; i<=MAX_ATTEMPTS; i++))
              do
                LATEST_LOG=$(docker logs higress-ai 2>&1 | tail -n 10)
                if echo "$LATEST_LOG" | grep -q "console entered RUNNING state"
                  then
                    echo "success"
                    break
                  else
                    sleep $INTERVAL
              fi
            done
            sleep 10
            
            chmod +x /root/application/mcp/openapi-to-mcp   
            # 测试
            python higress_client.py --api-key ${mcp_KEY} --domain ${private_ip} --config /root/config.json
            sleep 10

          - RegionId:
              Ref: ALIYUN::Region
            mcp_KEY:
              Ref: MCP_KEY
            MCP_RESULT:
              Fn::Jq:
                - "First"
                - '{mcpServers: map({ key: .serverCode, value: { command, args, env,type,url } }) | from_entries }'
                - Ref: McpConfigJson
            private_ip:
              Fn::Sub:
                - ${ServerAddress}:8000
                - ServerAddress:
                    Fn::Select:
                      - 0
                      - Fn::GetAtt:
                          - InstanceGroup
                          - PrivateIps

Outputs:
  openapi_server_address:
    Label:
      en: "Tool OepnAPI Access URL(Recommend AI Assistant: Open WebUI)"
      zh-cn: 工具OpenAPI访问地址(推荐AI助手：Open WebUI)
    Value:
      Fn::Jq:
        - All
        - Fn::Sub:
            - '[.[].serverCode] | map("${URL}" + .)'
            - URL:
                Fn::Sub:
                  - http://${ServerAddress}:8000/
                  - ServerAddress:
                      Fn::If:
                        - DisablePublicNetworkCondition
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PrivateIps
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PublicIps


        - Ref: McpConfigJson
  mcp_server_address:
    Label:
      en: "MCP Server Access URL(adapt AI assistant: Dify, Cherry Studio, OpenWebUI)"
      zh-cn: MCP Server访问地址(适配AI助手：Dify, Cherry Studio等)
    Value:
      Fn::Jq:
        - First
        - Fn::Sub:
            - 'map({(.serverCode): {"transport": "sse","url": "${URL}/\(.serverCode)/sse","headers": {"Authorization": "Bearer ${APIKEY}"}}}) | add'
            - URL:
                Fn::Sub:
                  - http://${ServerAddress}:8080
                  - ServerAddress:
                      Fn::If:
                        - DisablePublicNetworkCondition
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PrivateIps
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PublicIps
              APIKEY:
                Ref: MCP_KEY
        - Ref: McpConfigJson
  bailian_server_address:
    Label:
      en: '[Bailian Server](https://bailian.console.aliyun.com/?tab=app#/mcp-manage/create) Access URL(Standard Claude Desktop Format)'
      zh-cn: '百炼Mcp Server地址 (标准Claude Desktop格式)'
    Value:
      Fn::Jq:
        - First
        - Fn::Sub:
            - '[ .[ ] | {key: .serverCode,value: {"mcpServers": {(.serverCode): {"type": "sse","url": "${URL}/\(.serverCode)/sse","headers": {"Authorization": "Bearer ${APIKEY}"}}}}}] | map("\"\(.key)\": \(.value | tojson)") | join("<br>\n  ")'
            - URL:
                Fn::Sub:
                  - http://${ServerAddress}:8080
                  - ServerAddress:
                      Fn::If:
                        - DisablePublicNetworkCondition
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PrivateIps
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PublicIps
              APIKEY:
                Ref: MCP_KEY
        - Ref: McpConfigJson
  mcp_api_key:
    NoEcho: 'True'
    Label:
      en: MCP API key（add prefix Bearer）
      zh-cn: MCP API KEY（使用时加前缀Bearer）
    Value:
      Ref: MCP_KEY

Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - McpConfigJson
          - MCP_KEY
        Label:
          Default: Mcp配置(可多选)

      - Parameters:
          - PayType
          - PayPeriodUnit
          - PayPeriod
        Label:
          default: 付费类型配置
      - Parameters:
          - EcsInstanceType
          - NetworkOption
          - InternetChargeType
          - InternetMaxBandwidthOut
          - InstancePassword
        Label:
          default: 资源配置
      - Parameters:
          - ZoneId
          - VpcOption
          - VpcId
          - VSwitchId
          - VpcCidrBlock
          - VSwitchCidrBlock
        Label:
          default: 可用区配置
    QuickDeployConfig:
      PackageFields:
        - Key: EcsInstanceType
        - Key: InternetChargeType
          Label:
            zh-cn: 公网带宽
            en: Internet Charge Type
          Value: '${InternetChargeType } / ${InternetMaxBandwidthOut} Mbps'
        - Key: PayType
          Label:
            zh-cn: 付费类型
            en: Pay Type
          Value: '${PayType}'
        - Key: PayPeriodUnit
          Label:
            zh-cn: 付费时长
            en: Pay Period
          Value: '${PayPeriod} ${PayPeriodUnit}'
      CustomFields:
        - Key: InstancePassword
        - Key: MCP_KEY
          Label:
            zh-cn: MCP 认证秘钥
            en: MCP Key
      CostRelatedKeys:
        - RegionId
        - PayPeriod
      AutomaticZone:
        ZoneIdKey: ZoneId