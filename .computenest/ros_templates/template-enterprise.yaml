ROSTemplateFormatVersion: '2015-09-01'
Conditions:
  DisablePublicNetworkCondition:
    Fn::Equals:
      - PrivateNet
      - Ref: NetworkOption
Parameters:
  HigressAI:
    Type: String
    Label:
      zh-cn: AI网关
      en: AI Gateway
  HigressDomainId:
    Type: String
    Label:
      zh-cn: AI域名
      en: AI DomainId
    Default: ""
  InternetMaxBandwidthOut:
    Type: Number
    Label:
      zh-cn: 公网带宽 (Mbps)
      en: Internet Max Bandwidth Out (Mbps)
    MinValue: 1
    MaxValue: 100
  InternetChargeType:
    Type: String
    Label:
      zh-cn: 带宽付费类型
      en: Internet Charge Type
    AssociationPropertyMetadata:
      ValueLabelMapping:
        PayByTraffic: 按流量计费
        PayByBandwidth: 按固定带宽计费
    AllowedValues:
      - PayByBandwidth
      - PayByTraffic
  McpConfigJson:
    Type: Json
    Label:
      zh-cn: MCP运行配置
      en: MCP Running Configuration
    AssociationProperty: ALIYUN::MCP::Server::Server
    AssociationPropertyMetadata:
      ShowLabel: false
      ShowCount: 6
  NetworkOption:
    Type: String
    AllowedValues:
      - PublicNet
      - PrivateNet
    AssociationPropertyMetadata:
      ValueLabelMapping:
        PublicNet:
          zh-cn: 公网访问SSE
          en: public network access
        PrivateNet:
          zh-cn: 私网访问SSE
          en: private network access
    Default: PublicNet
  PayType:
    Type: String
    Label:
      en: ECS Instance Charge Type
      zh-cn: 付费类型
    Default: PostPaid
    AllowedValues:
      - PostPaid
      - PrePaid
    AssociationProperty: ChargeType
    AssociationPropertyMetadata:
      LocaleKey: InstanceChargeType
  PayPeriodUnit:
    Type: String
    Label:
      en: Pay Period Unit
      zh-cn: 购买资源时长周期
    Default: Month
    AllowedValues:
      - Month
      - Year
    AssociationProperty: PayPeriodUnit
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  PayPeriod:
    Type: Number
    Label:
      en: Period
      zh-cn: 购买资源时长
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    AssociationProperty: PayPeriod
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  EcsInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: ${PayType}
      Constraints:
        InstanceTypeFamily:
          - ecs.u1
          - ecs.e
  InstancePassword:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AllowedPattern: ^[a-zA-Z0-9-\(\)\`\~\!\@\#\$\%\^\&\*\_\-\+\=\|\{\}\[\]\:\;\<\>\,\.\?\/]*$
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    MinLength: 8
    MaxLength: 30
    AssociationProperty: ALIYUN::ECS::Instance::Password
    AssociationPropertyMetadata:
      Random: true
      InstanceType: ${EcsInstanceType}
Resources:
  ExistVsw:
    Type: DATASOURCE::VPC::VSwitch
    Properties:
      VSwitchId:
        Fn::GetJsonValue:
          - VSwitchId
          - Fn::GetAtt:
              - ExtensionDataSource
              - VSwitch
  ExtensionDataSource:
    Type: DATASOURCE::APIG::Gateway
    Properties:
      GatewayId:
        Ref: HigressAI
  EcsRole:
    Type: ALIYUN::RAM::Role
    Properties:
      RoleName:
        Fn::Sub: HigressRole-${ALIYUN::StackId}
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs.aliyuncs.com
        Version: '1'
      Policies:
        - PolicyName:
            Fn::Sub: HigressEcsPolicy-${ALIYUN::StackId}
          PolicyDocument:
            Statement:
              - Action:
                  - ram:CreateServiceLinkedRole
                Resource:
                  - '*'
                Effect: Allow
                Condition:
                  StringEquals:
                    ram:ServiceName:
                      - supplier.computenest.aliyuncs.com
              - Action:
                  - ram:CreateServiceLinkedRole
                Resource:
                  - '*'
                Effect: Allow
                Condition:
                  StringEquals:
                    ram:ServiceName: cloudmonitor.aliyuncs.com
              - Action:
                  - computenestsupplier:*
                  - apig:*
                  - cms:*
                  - ecs:*
                  - vpc:*
                  - oss:*
                  - ros:*
                  - tag:*
                  - ots:*
                  - ram:GetRole
                Resource:
                  - '*'
                Effect: Allow
            Version: '1'
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupName:
        Ref: ALIYUN::StackName
      VpcId:
        Fn::GetJsonValue:
          - VpcId
          - Fn::GetAtt:
              - ExtensionDataSource
              - Vpc
      SecurityGroupIngress:
        - PortRange: 8000/8000
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 8080/8080
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 8001/8001
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 8443/8443
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
  InstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      InstanceChargeType:
        Ref: PayType
      PeriodUnit:
        Ref: PayPeriodUnit
      Period:
        Ref: PayPeriod
      VpcId:
        Fn::GetJsonValue:
          - VpcId
          - Fn::GetAtt:
              - ExtensionDataSource
              - Vpc
      VSwitchId:
        Fn::GetJsonValue:
          - VSwitchId
          - Fn::GetAtt:
              - ExtensionDataSource
              - VSwitch
      ZoneId:
        Fn::GetAtt:
          - ExistVsw
          - ZoneId
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId: ecs_image_quickstart-mcp
      Password:
        Ref: InstancePassword
      InstanceType:
        Ref: EcsInstanceType
      SystemDiskCategory: cloud_essd
      RamRoleName:
        Fn::GetAtt:
          - EcsRole
          - RoleName
      SystemDiskSize: 40
      InternetMaxBandwidthOut:
        Ref: InternetMaxBandwidthOut
      InternetChargeType:
        Ref: InternetChargeType
      IoOptimized: optimized
      MaxAmount: 1
  RunInstallCommand:
    Type: ALIYUN::ECS::RunCommandOfLifespan
    Properties:
      InstanceIds:
        Fn::GetAtt:
          - InstanceGroup
          - InstanceIds
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub:
          - |
            set -e
            cpu_cores=$(nproc)
            workers=$((cpu_cores * 2))
            cd /root
            cat > config.json << EOF
            ${MCP_RESULT}
            EOF
            #sed -i "s|\${!MCP_KEY}|${mcp_KEY}|g" /root/application/mcp/docker-compose-enterprise.yaml
            sed -i "s|\${!MCP_KEY}|${mcp_KEY}|g" /root/application/mcp/docker-compose-enterprise.yaml

            file_path="/etc/systemd/system/quickstart-mcp.service"
            if [ ! -f "$file_path" ]; then
            cat > $file_path <<EOF
            [Unit]
            Description=Docker Compose Application Service
            Requires=docker.service
            After=docker.service

            [Service]
            Type=oneshot
            RemainAfterExit=yes
            WorkingDirectory=/root/application/mcp
            ExecStart=/usr/bin/docker compose -f docker-compose-enterprise.yaml up -d
            ExecStop=/usr/bin/docker compose down
            TimeoutStartSec=0

            [Install]
            WantedBy=multi-user.target
            EOF

            systemctl enable quickstart-mcp

            fi
            systemctl daemon-reload
            systemctl restart quickstart-mcp
            cd /root/application/mcp

            MAX_TIMEOUT=1800
            INTERVAL=10
            MAX_ATTEMPTS=$((MAX_TIMEOUT / INTERVAL))

            for ((i=1; i<=MAX_ATTEMPTS; i++))
              do
                LATEST_LOG=$(docker logs mcpo-service 2>&1 | tail -n 10)
                if echo "$LATEST_LOG" | grep -q "Application startup complete"
                  then
                    echo "success"
                    break
                  else
                    sleep $INTERVAL
              fi
            done
            sleep 15

            chmod +x /root/application/mcp/openapi-to-mcp
            # 静默卸载 aliyun-cli
            yum remove aliyun-cli -y

            # 静默下载 aliyun-cli
            curl -s https://aliyuncli.alicdn.com/aliyun-cli-linux-latest-amd64.tgz -o aliyun-cli-linux-latest.tgz

            # 静默解压 aliyun-cli
            tar xzf aliyun-cli-linux-latest.tgz
            ./aliyun configure set \
            --profile EcsProfile \
            --mode EcsRamRole \
            --ram-role-name ${RamRoleName} \
            --region cn-hangzhou
            # 测试
            python higress_enterprise.py register --gateway-id ${GatewayID} ${mcp_KEY} --private-ip ${private_ip} --domain-id "${DomainId}" --tools-config /root/config.json --region ${RegionId}
            sleep 10
          - RegionId:
              Ref: ALIYUN::Region
            mcp_KEY: ''
            MCP_RESULT:
              Fn::Jq:
                - First
                - '{mcpServers: map({ key: .serverCode, value: { command, args, env,type,url } }) | from_entries }'
                - Ref: McpConfigJson
            GatewayID:
              Ref: HigressAI
            RamRoleName:
              Fn::GetAtt:
                - EcsRole
                - RoleName
            private_ip:
              Fn::Sub:
                - ${ServerAddress}
                - ServerAddress:
                    Fn::Select:
                      - 0
                      - Fn::GetAtt:
                          - InstanceGroup
                          - PrivateIps
            DomainId:
              Ref: HigressDomainId
      CommandContentOnDeletion:
        Fn::Sub:
          - |
            cd /root/application/mcp/
            python higress_enterprise.py cleanup --gateway-id ${GatewayID} --region ${RegionId}
            sleep 10
          - RegionId:
              Ref: ALIYUN::Region
            GatewayID:
              Ref: HigressAI
Outputs:
  openapi_server_address:
    Label:
      en: 'Tool OepnAPI Access URL(Recommend AI Assistant: Open WebUI)'
      zh-cn: 工具OpenAPI访问地址(推荐AI助手：Open WebUI)
    Value:
      Fn::Jq:
        - All
        - Fn::Sub:
            - '[.[].serverCode] | map("${URL}" + .)'
            - URL:
                Fn::Sub:
                  - http://${ServerAddress}:8000/
                  - ServerAddress:
                      Fn::If:
                        - DisablePublicNetworkCondition
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PrivateIps
                        - Fn::Select:
                            - 0
                            - Fn::GetAtt:
                                - InstanceGroup
                                - PublicIps
        - Ref: McpConfigJson

Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - McpConfigJson
          - HigressAI
          - HigressDomainId
        Label:
          Default: Mcp配置(可多选)
      - Parameters:
          - PayType
          - PayPeriodUnit
          - PayPeriod
        Label:
          default: 付费类型配置
      - Parameters:
          - EcsInstanceType
          - NetworkOption
          - InternetChargeType
          - InternetMaxBandwidthOut
          - InstancePassword
        Label:
          default: 资源配置
    QuickDeployConfig:
      PackageFields:
        - Key: EcsInstanceType
        - Key: InternetChargeType
          Label:
            zh-cn: 公网带宽
            en: Internet Charge Type
          Value: ${InternetChargeType } / ${InternetMaxBandwidthOut} Mbps
        - Key: PayType
          Label:
            zh-cn: 付费类型
            en: Pay Type
          Value: ${PayType}
        - Key: PayPeriodUnit
          Label:
            zh-cn: 付费时长
            en: Pay Period
          Value: ${PayPeriod} ${PayPeriodUnit}
      CustomFields:
        - Key: InstancePassword
      CostRelatedKeys:
        - RegionId
        - PayPeriod
      AutomaticZone:
        ZoneIdKey: ZoneId
